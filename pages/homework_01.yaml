title:      "Homework 01: Detective Work"
icon:       fa-book
navigation:
  - name: "Home"
    link: "index.html"
    icon: "fa-gavel"
internal:
external:
body:       |

    ## Task 1: Getting to Genovia/Cimmeria/Drusselstein/Florin/Guilder

    
    <script src="https://d3js.org/d3.v6.min.js"></script>
    <style>
        .node circle {
            fill: #69b3a2;
            stroke: #333;
            stroke-width: 2px;
        }
        .node text {
            font-size: 12px;
            font-family: Arial, sans-serif;
            pointer-events: none;
        }
        .link {
            fill: none;
            stroke: #999;
            stroke-opacity: 0.6;
            stroke-width: 2px;
        }
    </style>
    <h1>Detective's Journey Graph</h1>
    <svg width="800" height="600"></svg>

    <script>
        const nodes = [
            { id: "Office" },
            { id: "Subway Station" },
            { id: "Ferry Terminal" },
            { id: "Downtown" },
            { id: "Suburbs" },
            { id: "Park" },
            { id: "Bridge" },
            { id: "Mansion" }
        ];

        const links = [
            { source: "Office", target: "Subway Station", cost: 5, travel: "Walk" },
            { source: "Office", target: "Ferry Terminal", cost: 15, travel: "Walk" },
            { source: "Subway Station", target: "Downtown", cost: 10, travel: "Subway" },
            { source: "Ferry Terminal", target: "Suburbs", cost: 20, travel: "Ferry" },
            { source: "Downtown", target: "Mansion", cost: 10, travel: "Taxi" },
            { source: "Downtown", target: "Park", cost: 15, travel: "Walk" },
            { source: "Park", target: "Mansion", cost: 20, travel: "Walk" },
            { source: "Suburbs", target: "Mansion", cost: 5, travel: "Taxi" },
            { source: "Bridge", target: "Mansion", cost: 25, travel: "Walk" }
        ];

        const svg = d3.select("svg");
        const width = +svg.attr("width");
        const height = +svg.attr("height");

        const simulation = d3.forceSimulation(nodes)
            .force("link", d3.forceLink(links).id(d => d.id).distance(100))
            .force("charge", d3.forceManyBody().strength(-300))
            .force("center", d3.forceCenter(width / 2, height / 2));

        const link = svg.append("g")
            .selectAll("line")
            .data(links)
            .enter().append("line")
            .attr("class", "link")
            .attr("stroke-width", 2);

        const node = svg.append("g")
            .selectAll("g")
            .data(nodes)
            .enter().append("g")
            .attr("class", "node");

        node.append("circle")
            .attr("r", 10);

        node.append("text")
            .attr("x", 15)
            .attr("dy", ".35em")
            .text(d => d.id);

        simulation.on("tick", () => {
            link
                .attr("x1", d => d.source.x)
                .attr("y1", d => d.source.y)
                .attr("x2", d => d.target.x)
                .attr("y2", d => d.target.y);

            node
                .attr("transform", d => `translate(${d.x},${d.y})`);
        });

        link.append("title")
            .text(d => `${d.travel}: Cost ${d.cost}`);
    </script>

    ## Task 2: Solving the Murder

    ## Task 3: Catching the murderer

    Run the following notebook and answer the included questions using the method of your choosing:

    <div class="alert alert-success" markdown="1">
    [DOWNLOAD NOTEBOOK](static/homeworks/homework01.ipynb)
    </div>

    For your convenience the notebook is displayed below as HTML but you will likely
    find it easier to download the raw notebook file given above.

    <iframe src="static/homework_htmls/homework01.html" width="100%" height="800px"></iframe>

    <pre style="display: none;" id="dr-container" class="codehilite"><code id="dredd-response"></code></pre>

    To submit your answers, you will need add your `homework01.ipynb` file
    in the `homework01` folder of your **assignments** repository:

    Answer the questions in your notebook file using the method of your choice and
    once you are finished, follow the instructions below to submit your notebook.

    1. For this class, you must use a **separate [git] branch for each
    assignment**.  This means that the work for each reading and challenge must
    be done in a separate branch.  To create and checkout a new branch, you can
    do the following:

            :::bash
            $ git checkout main         # Make sure we are in master branch
            $ git pull --rebase           # Make sure we are up-to-date with github repository

            $ git checkout -b homework01   # Create homework00 branch and check it out

        Once you do the above, you should see the following output for the
        [git-branch] command:

            :::bash
            $ git branch
              main
              homework00
            * homework01

        The `*` indicates that we are currently on the `homework01` branch.

    2. Once you have your notebook filled out, you need to add, commit the file, and
    push your commits to [GitHub]:

            :::bash
            $ git add homework01.ipynb                # Add answers.json to staging area
            $ git commit -m "Homework 01: Done"    # Commit work

            $ git push -u origin homework01        # Push branch to GitHub

        <div class="alert alert-success" markdown="1">
        **Note**: You may edit and commit changes to your branch as many times
        as you wish.  Just make sure all of your work goes in the appropriate
        branch and then perform a `git push` when you are done.
        </div>

    3. When you are ready for your final submission, you need to create a
    **pull request** via the [GitHub] interface:

        - First, go to your repository's **Branches** page and then press the
        **New pull request** button for the appropriate branch:

            <div class="thumbnail">
            <img src="static/img/pr_step_1.png" class="img-responsive"/>
            </div>

        - Next, edit the **pull request** title to "Homework 01", write a
          comment if necessary and then press the "Create pull request" button.

            <div class="thumbnail">
            <img src="static/img/pr_step_2.png" class="img-responsive"/>
            </div>

    Once you have made the **pull request**, the instructor or teaching
    assistant can verify your work and provide feedback via the discussion form
    inside the **pull request**.  If necessary, you can update your submission
    by simply committing and pushing to the appropriate branch; the **pull
    request** will automatically be updated to match your latest work.

    When all work is graded, the grader will merge your branch and close the
    **pull request**.

    <div class="alert alert-danger" markdown="1">
    **Note**: Please **do not merge** your own **pull request**.  This makes it
    more difficult for the graders to keep track of what needs to be graded.
    </div>

    <div class="alert alert-success" markdown="1">

    #### <i class="fa fa-thumbs-up"></i> Qualitative Feedback

    The purpose of this workflow is to provide you with better feedback.
    Instead of simply determining if your work is correct, the instructor will
    attempt to provide you with more **qualitative feedback** such as whether
    or not you used good programming practices or if your code could be
    improved or organized better.

    The hope is that this will help you grow as programmers and develop some
    **taste** :).

    </div>

    [CSE 30124 Introduction to Artificial Intelligence]:     index.html
    [GitHub]:                               https://github.com
    [Zoom]:                                 https://notredame.zoom.us/
    [Slack]:                                https://nd-cse.slack.com/
    [SSH Keys]:                             https://help.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh
    [nd-cse-30124-fa24]:                    https://github.com/nd-cse-30124-fa24
    [git-branch]:                           https://git-scm.com/docs/git-branch