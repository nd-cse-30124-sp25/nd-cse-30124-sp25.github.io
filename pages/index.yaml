title:      Introduction to Artificial Intelligence
icon:       fa-rocket
navigation:
    - name: "Logistics"
      link: "#logistics"
      icon: "fa-cogs"
    - name: "Schedule"
      link: "#schedule"
      icon: "fa-calendar"
    - name: "Requirements"
      link: "#Requirements"
      icon: "fa-balance-scale"
    - name: "Resources"
      link: "#resources"
      icon: "fa-external-link"
internal:
external:
    tas:        'static/yaml/tas.yaml'
    schedule:   'static/yaml/schedule.yaml'
    semester_info: 'static/yaml/semester_info.yaml'
body:       |

    {% set term_code = page.external['semester_info']['Term'][:2].lower() + page.external['semester_info']['Year'][-2:] %}


    {% set ta_colors = { 'swebster': 'rgba(255, 204, 204, 0.5)', 'tberg3': 'rgba(204, 255, 204, 0.5)', 'tlohman': 'rgba(204, 204, 255, 0.5)', 'ozino': 'rgba(255, 255, 204, 0.5)', 'snoonan2': 'rgba(255, 204, 255, 0.5)', 'fseptien': 'rgba(204, 255, 255, 0.5)' } %}

    <div class="row" markdown="1">

    **CSE 30124** is an elective course in the [Computer Science and
    Engineering] program at the [University of Notre Dame]. This course
    serves as an introduction and gateway to upper level machine learning
    and artificial intelligence courses. In this course students will
    learn the fundamentals of learning algorithms and the basics of common
    python libraries for these algorithms such as scikit-learn and pytorch.

    [Computer Science and Engineering]:     http://cse.nd.edu
    [University of Notre Dame]:             http://www.nd.edu

    </div>

    <img src="static/img/teaser.png" class="pull-right" style="margin-left: 10px; width: 40%"/>

    <div class="row" markdown="1">

    Upon successful completion of this course, students will be able to:

    1. **Evaluate** which model is appropriate for a given problem.

    2. **Utilize** modern python libraries for ML and AI.

    3. **Implement** basic ML and AI models.

    4. **Assess** AI/ML implementations for common issues and biases.

    </div>

    <div class="row">
        <div class="page-header">
            <h2 id="logistics"><i class="fa fa-cogs"></i> Logistics</h2>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-6">
                    <h3>Class Information</h3>

                    <dl>
                        <dt><i class="fa fa-clock-o"></i> Lecture</dt>
                        <dd><strong>M / W</strong> 3:30 PM - 4:45 PM</dd>

                        <dt><i class="fa fa-home"></i> Location</dt>
                        <dd>Fitz 356</dd>

                        <dt><i class="fa fa-slack"></i> Slack</dt>
                        <dd><a href="https://nd-cse.slack.com/messages/cse-30124-{{ term_code }}/">#cse-30124-{{ term_code }}</a></dd>

                        <dt><i class="fa fa-github"></i> GitHub</dt>
                        <dd><a href="https://www.github.com/nd-cse-30124-{{ term_code }}/">nd-cse-30124-{{ term_code }}</a></dd>
                    </dl>
                </div>

                <div class="col-md-6">
                    <h3>Instructor</h3>

                    <dl>
                        <dt><i class="fa fa-user"></i> Instructor</dt>
                        <dd><a href="http://www.williamtheisen.com">Bill Theisen</a> (<a href="mailto:wtheisen@nd.edu">wtheisen@nd.edu</a>)</dd>
                        <dd>Please use Dr./Professor Bill or <br>Dr./Professor Theisen</dd>

                        <dt><i class="fa fa-life-ring"></i> Office Hours</dt>
                        <dd><strong>Thursdays</strong> 1:00 PM - 5:00 PM, and by <strong>appointment</strong></dd>

                        <dt><i class="fa fa-briefcase"></i> Office Location</dt>
                        <dd>356B Fitz</dd>
                    </dl>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <h3>Teaching Assistants</h3>

            <div class="row">
                {% for index, (ta_id, ta_data) in enumerate(sorted(page.external['semester_info']['TAs'].items(), key=lambda x: x[1]['name'].split()[-1])) %}
                    <div class="col-md-4">
                        <dl>
                            <dt><i class="fa fa-user"></i> {{ ta_data['level'] }} Teaching Assistant</dt>
                            <dd>{{ ta_data['name'] }} (<a href="mailto:{{ ta_data['netid'] }}@nd.edu">{{ ta_data['netid'] }}@nd.edu</a>)</dd>
                            <!--
                            <dt><i class="fa fa-life-ring"></i> Office Hours</dt>
                            <dd>{{ ta_data.get('office_hours', 'TBD') }}</dd>
                            <dt><i class="fa fa-briefcase"></i> Office Location</dt>
                            <dd>{{ ta_data.get('oh_location', 'TBD') }}</dd>
                            //-->
                        </dl>
                    </div>
                    {% if (index + 1) % 3 == 0 %}
                        <div class="row"></div>
                    {% end %}
                {% end %} 
            </div>
        </div>
    </div>

    <div class="row">
        <div class="page-header">
            <h2 id="office_hours"><i class="fa fa-calendar"></i>Office Hours</h2>
        </div>
    </div>

    <div class="row">
        <table border="2px solid black" cellpadding="5" cellspacing="0" style="table-layout: fixed; width: 100%; border-collapse: "collapse"">
        <tr>
            <th style="width: 150px;"></th>
            {% for day in ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"] %}
            <th style="width: calc((100% - 150px) / 7); text-align: center;">{{ day }}</th>
            {% end %}
        </tr>

        {% set processed_slots = {} %}
       
        {% for time_slot in ["10:00 AM - 11:00 AM", "11:00 AM - 12:00 PM", "12:00 PM - 1:00 PM", "1:00 PM - 2:00 PM", "2:00 PM - 3:00 PM", "3:00 PM - 4:00 PM", "4:00 PM - 5:00 PM", "5:00 PM - 6:00 PM", "6:00 PM - 7:00 PM", "7:00 PM - 8:00 PM", "8:00 PM - 9:00 PM"] %}
            <tr>
            <td style="text-align: left; padding: 8px;">{{ time_slot }}</td>
            {% for day in ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"] %}
                {% if not processed_slots.get(f"{day}_{time_slot}") %}
                    {% set class_hours = page.external['semester_info']['Class']['times'].get(day, '') %}
                    {% set instructor_hours = page.external['semester_info']['Instructor']['office_hours'].get(day, '') %}
                    {% set show_cell = True %}


                    {% if class_hours %}
                        {% set start_time = class_hours.split(' - ')[0].split(':')[0] + ":00 " + class_hours.split(' - ')[0].split(':')[1].split(' ')[1] %}

                        {% if dateutil.parser.parse(start_time).strftime("%I:%M:%S %p") == dateutil.parser.parse(time_slot.split(' - ')[0]).strftime("%I:%M:%S %p") %}
                            {% set end_time = class_hours.split(' - ')[1].split(':')[0] + ":00 " + class_hours.split(' - ')[1].split(':')[1].split(' ')[1] %}
                            {% set start_slot = dateutil.parser.parse(start_time) %}
                            {% set end_slot = dateutil.parser.parse(end_time) %}

                            {% set rowspan = int(((end_slot - start_slot).seconds / 3600) + 0.5) %}

                            {% for i in range(rowspan) %}
                                {% set hour_offset = dateutil.relativedelta.relativedelta(hours=i) %}
                                {% set curr_slot = (start_slot + hour_offset).strftime("%-I:%M %p") %}
                                {% set _ = processed_slots.update({f"{day}_{curr_slot} - {(start_slot + hour_offset + dateutil.relativedelta.relativedelta(hours=1)).strftime('%-I:%M %p')}": True}) %}
                            {% end %}
                            <td rowspan="{{ rowspan }}" style="text-align: center; vertical-align: middle; padding: 0; background-color: rgba(204, 229, 255, 0.5);">
                                Lecture<br>
                                {{ class_hours }}<br>
                                {{ page.external['semester_info']['Class']['location'] }}
                            </td>
                            {% set show_cell = False %}
                        {% end %}
                    {% end %}
                    
                    {% if instructor_hours %}
                        {% set instructor_hours = page.external['semester_info']['Instructor']['office_hours'].get(day, '').split('|')[0] %}
                        {% set instructor_loc = page.external['semester_info']['Instructor']['office_hours'].get(day, '').split('|')[1] %}
                        {% set start_time = instructor_hours.split(' - ')[0] %}

                        {% if dateutil.parser.parse(start_time).strftime("%I:%M:%S %p") == dateutil.parser.parse(time_slot.split(' - ')[0]).strftime("%I:%M:%S %p") %}
                            {% set end_time = instructor_hours.split(' - ')[1] %}
                            {% set start_slot = dateutil.parser.parse(start_time) %}
                            {% set end_slot = dateutil.parser.parse(end_time) %}

                            {% set rowspan = int(((end_slot - start_slot).seconds / 3600) + 0.5) %}

                            {% for i in range(rowspan) %}
                                {% set hour_offset = dateutil.relativedelta.relativedelta(hours=i) %}
                                {% set curr_slot = (start_slot + hour_offset).strftime("%-I:%M %p") %}
                                {% set _ = processed_slots.update({f"{day}_{curr_slot} - {(start_slot + hour_offset + dateutil.relativedelta.relativedelta(hours=1)).strftime('%-I:%M %p')}": True}) %}
                            {% end %}
                            <td rowspan="{{ rowspan }}" style="text-align: center; vertical-align: middle; padding: 0; background-color: rgba(204, 229, 255, 0.5);">
                                {{ page.external['semester_info']['Instructor']['name'] }}<br>
                                {{ instructor_hours }}<br>
                                {{ instructor_loc }}
                            </td>
                            {% set show_cell = False %}
                        {% end %}
                    {% end %}

                    {% for ta_id, ta in page.external['semester_info']['TAs'].items() %}
                        {% if 'office_hours' in ta and day in ta['office_hours'] %}
                            {% set ta_hours = ta['office_hours'][day].split('|')[0] %}
                            {% set ta_loc = ta['office_hours'][day].split('|')[1] %}
                            {% set start_time = ta_hours.split(' - ')[0].split(':')[0] + ":00 " + ta_hours.split(' - ')[0].split(':')[1].split(' ')[1] %}

                            {% if dateutil.parser.parse(start_time).strftime("%I:%M:%S %p") == dateutil.parser.parse(time_slot.split(' - ')[0]).strftime("%I:%M:%S %p") %}
                                {% set end_time = ta_hours.split(' - ')[1].split(':')[0] + ":00 " + ta_hours.split(' - ')[1].split(':')[1].split(' ')[1] %}
                                {% set start_slot = dateutil.parser.parse(start_time) %}
                                {% set end_slot = dateutil.parser.parse(end_time) %}

                                {% set rowspan = int(((end_slot - start_slot).seconds / 3600) + 0.5) %}

                                {% for i in range(rowspan) %}
                                    {% set hour_offset = dateutil.relativedelta.relativedelta(hours=i) %}
                                    {% set curr_slot = (start_slot + hour_offset).strftime("%-I:%M %p") %}
                                    {% set _ = processed_slots.update({f"{day}_{curr_slot} - {(start_slot + hour_offset + dateutil.relativedelta.relativedelta(hours=1)).strftime('%-I:%M %p')}": True}) %}
                                {% end %}

                                <td rowspan="{{ rowspan }}" style="text-align: center; vertical-align: middle; padding: 0; background-color: {{ ta_colors[ta_id] }};">
                                    {{ ta['name'] }}<br>
                                    {{ ta_hours }}<br>
                                    {{ ta_loc }}
                                </td>
                                {% set show_cell = False %}
                            {% end %}
                        {% end %}
                    {% end %}
                    
                    {% if show_cell %}
                        <td style="padding: 8px;"></td>
                    {% end %}
                {% end %}
            {% end %}
            </tr>
        {% end %}
        </table>
    </div>

    <div class="row">
        <div class="page-header">
            <h2 id="schedule"><i class="fa fa-calendar"></i> Schedule</h2>
        </div>
    </div>

    <style>
        table.schedule td.unit {
            background-color: #fff;
            border-right: 2px solid #ddd;
            text-align: right;
            width: 175px;
            vertical-align: middle;
        }
        .collapse-row {
            background-color: #f9f9f9;
            padding: 10px;
        }
        .caret-icon {
            cursor: pointer;
            margin-right: 5px;
        }
    </style>

    <div class="row">
        <table class="table condensed table-striped schedule">
            <thead>
                <tr>
                    <th class="text-center">Unit</th>
                    <th class="text-center" style="width: 100px;">Date</th>
                    <th class="text-center">Topics</th>
                    <th class="text-center" style="width: 275px;">Assignments</th>
                </tr>
            </thead>
            <tbody>
                {% for theme in page.external['schedule'] %}
                    {% if not theme.get('days') %}
                        <tr>
                        <td colspan="4" class="text-center text-strong" style="border-top: 2px solid #ddd; border-bottom: 2px solid #ddd; padding: 4px;">{{ theme['name'] }}</td>
                        </tr>
                        {% continue %}
                    {% end %}

                    {% for index, day in enumerate(theme['days']) %}
                        <tr>
                            {% if index == 0 %}
                                <td rowspan="{{ len(theme['days']) }}" class="text-strong text-primary text-center unit">{{ theme['name'] }}</td>
                            {% end %}

                            <td class="text-center text-strong"><tt>{{ day['date'] }}</tt></td>
                            <td class="text-strong">

                            {% if 'topics' in day %}
                                {% if day['topics'] == 'Office Hours' or day['topics'].startswith('Cancelled') %}
                                    <i class="text-muted">{{ day.get('topics', '') }}</i>
                                {% elif 'exam' in day['topics'].lower() %}
                                    <i class="text-danger">{{ day.get('topics', '') }}</i>
                                {% else %}
                                    {% if day.get('resources') %}
                                        <i class="fa fa-caret-right caret-icon" data-toggle="collapse" data-target="#resources-{{ index }}"></i>
                                    {% end %}
                                    {{ day.get('topics', '') }}
                                {% end %}
                            {% else %}
                                <i class="text-muted">Intro to AI</i>
                            {% end %}

                            {% for item in day.get('items', []) %}
                                {% if 'exam' in item['name'].lower() %}
                                    {% set item['label'] = 'danger' %}
                                {% elif item['name'].lower().startswith('panopto') %}
                                    {% set item['label'] = 'success' %}
                                {% elif item['name'].lower().startswith('blogpost') %}
                                    {% set item['label'] = 'primary' %}
                                {% else %}
                                    {% set item['label'] = 'default' %}
                                {% end %}

                                {% if 'link' in item %}
                                    <a class="label label-{{ item['label'] }}" href="{{ item['link'] }}">{{ item['name'] }}</a>
                                {% else %}
                                    <span class="label label-{{ item['label'] }}">{{ item['name'] }}</span>
                                {% end %}
                            {% end %}

                            </td>
                            <td class="text-strong text-center">

                            {% for assignment in day.get('assignments', []) %}
                                {% set assignment_id = '_'.join(assignment.lower().split()) %}

                                {% if 'solutions' in assignment_id %}
                                    {% set assignment_label = 'success' %}
                                    <a href="static/solutions/{{ assignment_id }}.pdf" class="label label-{{ assignment_label }}">{{ assignment }}</a>
                                {% elif assignment_id.startswith('quiz') %}
                                    {% set assignment_label = 'primary' %}
                                    <a href="static/pdf/{{ assignment_id }}.pdf" class="label label-{{ assignment_label }}">{{ assignment }}</a>
                                {% elif 'practice' in assignment_id %}
                                    {% set assignment_label = 'success' %}
                                    <a href="static/pdf/{{ assignment_id }}.pdf" class="label label-{{ assignment_label }}">{{ assignment }}</a>
                                {% elif 'exam' in assignment_id %}
                                    {% set assignment_label = 'danger' %}
                                    <a href="static/pdf/{{ assignment_id }}.pdf" class="label label-{{ assignment_label }}">{{ assignment }}</a>
                                {% elif 'primer' in assignment_id %}
                                    {% set assignment_label = 'success' %}
                                    <a href="{{ assignment_id }}.html" class="label label-{{ assignment_label }}">{{ assignment }}</a>
                                {% else %}
                                    {% set assignment_label = 'caution' %}
                                    <a href="{{ assignment_id }}.html" class="label label-{{ assignment_label }}">{{ assignment }}</a>
                                {% end %}
                            {% end %}
                            </td>
                        </tr>
                        {% if day.get('resources') %}
                            <tr id="resources-{{ index }}" class="collapse collapse-row">
                                <td colspan="4">
                                    <ul>
                                        {% for resource in day.get('resources', []) %}
                                            {% if resource['type'] == 'Reading' %}
                                                {% set assignment_label = 'success' %}
                                            {% elif resource['type'] == 'Lecture' %}
                                                {% set assignment_label = 'success' %}
                                            {% elif resource['type'] == 'Notebook' %}
                                                {% set assignment_label = 'primary' %}
                                            {% end %}
                                            <li><a href="{{ resource['link'] }}" class="label label-{{ assignment_label }}">{{ resource['type'] }}: {{ resource['name'] }}</a></li>
                                        {% end %}
                                    </ul>
                                </td>
                            </tr>
                        {% end %}
                    {% end %}
                {% end %}
            </tbody>
        </table>
        <br>
    </div>

    <div class="row">
        <div class="page-header">
            <h2 id="Requirements"><i class="fa fa-balance-scale"></i> Requirements</h2>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
        <h3>Coursework</h3>
        <table class="table table-condensed table-bordered table-striped">
            <thead>
                <tr>
                    <th class="text-center">Component</th>
                    <th class="text-center">Points</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><span class="label label-success">Course Primer</span> Course Primer</td>
                    <td class="text-center">1 &times; 5</td>
                </tr>
                <tr>
                    <td><span class="label label-primary">Homeworks</span> Group Homework Assignments</td>
                    <td class="text-center">5 &times; 20</td>
                </tr>
                <tr>
                    <td><span class="label label-info">Midterms</span> Midterm Exams (5 points for turning in exam practice packet)</td>
                    <td class="text-center">2 &times; 60</td>
                </tr>
                <tr>
                    <td><span class="label label-danger">Exams</span> Final Exam (5 points for turning in exam practice packet)</td>
                    <td class="text-center">1 &times; 75</td>
                </tr>
                <tr>
                    <td class="text-strong text-right">Total</td>
                    <td class="text-strong text-center">300</td>
                </tr>
            </tbody>
        </table>
        </div>
        <div class="col-md-6">
        <h3>Grading</h3>
        <table class="table table-condensed table-bordered">
            <thead>
                <tr>
                    <th class="text-center">Grade</th>
                    <th class="text-center">Points</th>
                    <th class="text-center">Grade</th>
                    <th class="text-center">Points</th>
                    <th class="text-center">Grade</th>
                    <th class="text-center">Points</th>
                </tr>
            </thead>
            <tbody>
                <tr class="success">
                    <td></td>
                    <td></td>
                    <td class="text-center text-strong">A</td>
                    <td class="text-center">279-300</td>
                    <td class="text-center text-strong">A-</td>
                    <td class="text-center">270-278</td>
                </tr>
                <tr class="info">
                    <td class="text-center text-strong">B+</td>
                    <td class="text-center">260-269</td>
                    <td class="text-center text-strong">B</td>
                    <td class="text-center">250-259</td>
                    <td class="text-center text-strong">B-</td>
                    <td class="text-center">240-249</td>
                </tr>
                <tr class="warning">
                    <td class="text-center text-strong">C+</td>
                    <td class="text-center">230-239</td>
                    <td class="text-center text-strong">C</td>
                    <td class="text-center">220-229</td>
                    <td class="text-center text-strong">C-</td>
                    <td class="text-center">210-219</td>
                </tr>
                <tr class="danger">
                    <td class="text-center text-strong">D</td>
                    <td class="text-center">195-209</td>
                    <td class="text-center text-strong">F</td>
                    <td class="text-center">0-194</td>
                    <td></td>
                    <td></td>
                </tr>
            </tbody>
        </table>
        </div>
    </div>

    <div class="row">
        <div class="col-md-10 col-md-offset-1">
            <div class="alert alert-info">
                <h4><i class="fa fa-calendar"></i> Due Dates</h4>
                <p>
                All <b>Homeworks</b> are to be
                  submited to your own <b>private</b> <a
                  href="https://github.com">GitHub</a> repository.  Unless
                  specified otherwise:
                </p>
                <p>
                <ul>
                <li><p><b>Homeworks</b> are due at <b>midnight</b> on the <b>Monday</b> of the due week.</p></li>
                </ul>
                </p>
            </div>
        </div>
    </div>

    <div class="row">
      <div class="col-md-12">
          <h3>Policies</h3>
          <div class="row">
              <div class="col-md-4">
              <h4>Participation</h4>
              <p>
              Students are expected to attend and contribute regularly in class. This
              means answering questions in class, participating in discussions, and
              helping other students.
              </p>
              <p>
              Foreseeable absences should be discussed with the instructor ahead of time.
              </p>
              </div>
               <div class="col-md-4">
              <h4>Community</h4>
              <p>
              Recalling one of the tenets of the <a href="https://en.wikipedia.org/wiki/Hacker_ethic">Hacker Ethic</a>:
              </p>
              <blockquote>
              Hackers should be judged by their hacking, not criteria such as
              degrees, age, race, sex, or position.
              </blockquote>
              <p>
              Students are expected to be respectful of their fellow classmates
              and the instructional staff.
              </p>
              </div>
              <div class="col-md-4">
              <h4>Students with Disabilities</h4>
              <p>
              Any student who has a documented disability and is registered with
              Disability Services should speak with the professor as soon as possible
              regarding accommodations. Students who are not registered should contact
              the <a href="https://sarabeadisabilityservices.nd.edu/">Office of Disabilities</a>.
              </p>
              </div>
          </div>
          <div class="row">
              <div class="col-md-4">
              <h4>Academic Honesty</h4>
              <p>
              Any academic misconduct in this course is considered a serious
              offense, and the strongest possible academic penalties will be
              pursued for such behavior. Students may discuss high-level
              ideas with other students, but at the time of implementation
              (i.e. programming), each person must do his/her own work. Use
              of the Internet as a reference is allowed but directly copying
              code or other information is cheating. It is cheating to copy,
              to allow another person to copy, all or part of an exam or a
              assignment, or to fake program output. It is also a violation
              of the <a href="https://honorcode.nd.edu/">Undergraduate
              Academic Code of Honor</a> to observe and then fail to report
              academic dishonesty. You are responsible for the security and
              integrity of your own work.
              </p>
              </div>
              <div class="col-md-4">
              <h4>Late Work</h4>
              <p>
              In the case of a serious illness or other excused absence, as defined by
              university policies, coursework submissions will be accepted late by the
              same number of days as the excused absence.
              </p>
              <p>
              Otherwise, there is an automatic <b>25% late penalty</b> for
              assignments turned in <b>12 hours</b> pass the specified
              deadline.
              </p>
              </div>
              <div class="col-md-4">
              <h4>Classroom Recording</h4>
              <p>
              This course will be recorded using Zoom and Panopto. This system allows us
              to automatically record and distribute lectures to you in a
              secure environment. You can watch these recordings on your
              computer, tablet, or smartphone. In the course in Sakai, look for
              the "Panopto" tool on the left hand side of the course.
              </p>
              <p>
              Because we will be recording in the classroom, your questions and
              comments may be recorded. Recordings typically only capture the
              front of the classroom, but if you have any concerns about your
              voice or image being recorded please speak to me to discuss your
              concerns. Except for faculty and staff who require access, no
              content will be shared with individuals outside of your course
              without your permission.
              </p>
              <p>
              These recordings are jointly copyrighted by the University of
              Notre Dame and your instructor. Posting them to other websites
              (including YouTube, Facebook, SnapChat, etc.) or elsewhere
              without express, written permission may result in disciplinary
              action and possible civil prosecution.
              </p>
              </div>
          </div>
      </div>
    </div>

    <div class="row">
        <div class="col-md-10 col-md-offset-1">
            <div class="alert alert-danger">
            <h4><i class="fa fa-warning"></i> CSE Guide to the Honor Code</h4>

            <p>For the assignments in this class, you are allowed to consult
            printed and online resources and to discuss the class material with
            other students.  You may also consult <b>AI Tools</b> such as
            <b>CoPilot</b> or <b>ChatGPT</b> for help explaining concepts,
            debugging problems, or as a reference.  Viewing or consulting
            <b>solutions</b>, such as those from other students, previous
            semesters, or generated by <b>AI Tools</b> is <b>never
            allowed</b>.</p>

            <p>Likewise, you may copy <b>small and trivial</b> snippets from
            books, online sources, and <b>AI Tools</b> as long as you <b>cite
            them properly</b>.  However, you <b>may not copy</b> solutions or
            <b>significant</b> portions of code from other students or online
            sources, nor may you generate solutions via <b>AI Tools</b>.  

            <p>Finally, when preparing for exams in this class, <b>you may not
            access exams from previous semesters</b>, nor may you look at or
            copy solutions from other current or former students.</p>

            <p></p>

            <table class="table table-striped table-bordered" style="color: #000000; background: #ffffff; font-weight: bold">
            <thead>
            <th></th>
            <th class="text-center">Resources</th>
            <th class="text-center">Solutions</th>
            </thead>
            <tbody>
            <tr>
            <th>Consulting</th>
            <td bgcolor="#93c47d">Allowed</td>
            <td bgcolor="#e06666">Not Allowed</td>
            </tr>
            <tr>
            <th>Copying</th>
            <td bgcolor="ffd966">Cite</td>
            <td bgcolor="#e06666">Not Allowed</td>
            </tr>
            </tbody></table>

            <p>See the <a
            href="https://cse.nd.edu/undergraduate/cse-guide-to-the-honor-code/">CSE
            Guide to the Honor Code</a> for definitions of the above terms and
            specific examples of what is allowed and not allowed when
            consulting resources.</p>

            <p>If you are unclear about whether certain forms of consultation
            or common work are acceptable or what the standards for citation
            are, you responsible for consulting your instructor.</p>

            <p>If an instructor sees behavior that is, in his judgement,
            academically dishonest, he is required to file either an <a
            href="https://honorcode.nd.edu/honor-code-violation-report/">Honor
            Code Violation Report</a> or a formal report to the College of
            Engineering Honesty Committee.</p>

            </div>
        </div>
    </div>

    <div class="row">
        <div class="page-header">
            <h2 id="resources"><i class="fa fa-external-link"></i> Resources</h2>
        </div>
    </div>

    <div class="row">
        <div class="col-md-10 col-md-offset-1">
            <div class="alert alert-success" markdown="1">
                <p>Submit any questions or suggestions to this anonymous google form: <a href="https://forms.gle/yrK4mndNDPsSmyD16">Questions and Suggestions</a></p>
                <br>
                <p><b>Note:</b> This form is genuinely anonymous but anonymity is a priviledge. Please don't misuse it.</p>
            </div>

            <div class="alert alert-warning" markdown="1">
                <p>If you're interested in being a TA please apply via this google form: <a href="https://docs.google.com/forms/d/e/1FAIpQLScFuwaSylcUzV1HgVMVzfVd_xMlpHu9w_x4cJtEKoJVl1d7nA/viewform?usp=sharing">TA Applications</a></p>
                <br>
                <p><b>Note:</b> Applications are due by the day of the second exam and will be evaluated shortly after.</p>
                <p><b>Note:</b> TAing for CSE 30124 is quite competitive and usually there are only 1 or 2 open slots a semester (if any), so it may be worth having a backup plan.</p>
            </div>
        </div>
    </div>
            
    <div class="row">
        <div class="col-md-10 col-md-offset-1">
            
            One of the benefits of ML/AI being extremely popular is there are many online resources
            available for learning it. The best teachers of the topics release much of their material
            avaible for free online. If something in class seemed unclear, you're encouraged
            to seek out an explanation that makes the most sense to you! If you find one that you really
            like, please share it with the rest of the class. Below are links to books, blogposts, and lectures
            that I personally find very useful.

            <h3>Readings</h3>

            I will provide readings from these books for each lecture. However I do not necessarily endorse these books and don't
            care for the way they go about teaching the material. That being said, since someone asked, if you want to prepare for
            lecture by doing some pre-reading, here are the books the readings will be from. I personally think you'd be better
            off watching one or more of the lectures below, which are taught by literally the best teachers in the field. If you
            do end up doing the reading, I'd be curious to hear which book you found most useful.

            <ul>
                <li><a href="https://d2l.ai/index.html">Dive into Deep Learning</a></li>
                <li><a href="https://www.statlearning.com/">An Introduction to Statistical Learning</a></li>
                <li><a href="https://www.cs.huji.ac.il/~shais/UnderstandingMachineLearning/copy.html">Understanding Machine Learning: From Theory to Algorithms</a></li>
            </ul>

            <h3>Courses</h3>
            <ul>
                <li><a href="https://cs50.harvard.edu/ai/2024/">Harvard's CS50's Introduction to Artificial Intelligence with Python</a></li>
                <li><a href="https://ocw.mit.edu/courses/6-034-artificial-intelligence-fall-2010/">MIT's 6.034 Artificial Intelligence</a></li>
                <li><a href="https://www.youtube.com/watch?v=ZiwogMtbjr4&list=PLoROMvodv4rOca_Ovz1DvdtWuz8BfSWL2">Stanford's CS221: Artificial Intelligence: Principles and Techniques</a></li>
            </ul>

            <h3>Books</h3>
            <ul>
                <li><a href="https://ai.stanford.edu/~nilsson/QAI/qai.pdf">The Quest for Artificial Intelligence</a>
                <li><a href="https://github.com/rasbt/machine-learning-book">Machine Learning with PyTorch and Scikit-Learn</a>
            </ul>
            
        </div>
    </div>